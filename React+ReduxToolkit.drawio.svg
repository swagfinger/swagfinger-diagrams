<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="643px" height="569px" viewBox="-0.5 -0.5 643 569" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2022-12-28T03:04:35.885Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.6.2 Chrome/106.0.5249.199 Electron/21.3.3 Safari/537.36&quot; etag=&quot;HWsjQnKO0lGl9fgUUC0R&quot; version=&quot;20.6.2&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;AkKhJlHCNJwqm_19Wb8n&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="80.8" y="332" width="120.2" height="31.6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="all"/><rect x="81.2" y="332.4" width="119.4" height="30.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="all"/><path d="M 409.27 156 L 445 156 L 445 162 L 482 162" fill="none" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 408.22 156 L 409.62 155.3 L 409.27 156 L 409.62 156.7 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 790px; margin-left: 2189px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 30px;">index imports App.js</font></div></div></div></foreignObject><text x="2189" y="793" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">index imports App.js</text></switch></g><rect x="328" y="120" width="80" height="72" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 393px; height: 1px; padding-top: 607px; margin-left: 1647px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><font color="#ffffff">index.js<br /></font><br /><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px;"><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> <span style="color: #9cdcfe;">React</span> <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'react'</span>;</div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> { <span style="color: #9cdcfe;">createRoot</span> } <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'react-dom/client'</span>;</div><div style=""><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>import { Provider } from 'react-redux';</b></font></span></div><div style=""><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>import { store } from './app/store';</b></font></span></div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> <span style="color: #9cdcfe;">App</span> <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'./App'</span>;</div><div style="color: rgb(212, 212, 212);"><br /></div><div style="color: rgb(212, 212, 212);"><span style="color: #569cd6;">const</span> <span style="color: #4fc1ff;">container</span> = <span style="color: #9cdcfe;">document</span>.<span style="color: #dcdcaa;">getElementById</span>(<span style="color: #ce9178;">'root'</span>);</div><div style="color: rgb(212, 212, 212);"><span style="color: #569cd6;">const</span> <span style="color: #4fc1ff;">root</span> = <span style="color: #dcdcaa;">createRoot</span>(<span style="color: #4fc1ff;">container</span>);</div><br /><div style="color: rgb(212, 212, 212);"><span style="color: #4fc1ff;">root</span>.<span style="color: #dcdcaa;">render</span>(</div><div style="color: rgb(212, 212, 212);">  <span style="color: #808080;">&lt;</span><span style="color: #4ec9b0;">React.StrictMode</span><span style="color: #808080;">&gt;</span></div><div style=""><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>    &lt;Provider store={store}&gt;</b></font></span></div><div style="color: rgb(212, 212, 212);">      <span style="color: #808080;">&lt;</span><span style="color: #4ec9b0;">App</span> <span style="color: #808080;">/&gt;</span></div><div style=""><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>    &lt;/Provider&gt;</b></font></span></div><div style="color: rgb(212, 212, 212);">  <span style="color: #808080;">&lt;/</span><span style="color: #4ec9b0;">React.StrictMode</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">);</div><br /></div></div></div></div></foreignObject><text x="1647" y="619" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">index.js...</text></switch></g><path d="M 536.77 201.08 L 538 202 L 538 288.73" fill="none" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 538 289.78 L 537.3 288.38 L 538 288.73 L 538.7 288.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1083px; margin-left: 2770px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 30px;">App.js imports the component</font></div></div></div></foreignObject><text x="2770" y="1087" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">App.js imports the component</text></switch></g><rect x="482" y="123" width="84" height="78" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 418px; height: 1px; padding-top: 622px; margin-left: 2412px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">App.js<br /><br /><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #d4d4d4;"> </span><span style="color: #9cdcfe;">React</span><span style="color: #d4d4d4;"> </span><span style="color: #c586c0;">from</span><span style="color: #d4d4d4;"> </span><span style="color: #ce9178;">'react'</span><span style="color: #d4d4d4;">;</span></div><div><span style="color: rgb(197, 134, 192);">import</span> { <span style="color: rgb(156, 220, 254);">Counter</span> } <span style="color: rgb(197, 134, 192);">from</span> <span style="color: rgb(206, 145, 120);">'./features/counter/Counter'</span>;<br /></div><div><br /></div><div><span style="color: #569cd6;">function</span><span style="color: #d4d4d4;"> </span><span style="color: #dcdcaa;">App</span><span style="color: #d4d4d4;">() {</span></div><div><span style="color: #d4d4d4;">  </span><span style="color: #c586c0;">return</span><span style="color: #d4d4d4;"> (</span></div><div><span style="color: #d4d4d4;">    </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #d4d4d4;"> </span><span style="color: #9cdcfe;">className</span><span style="color: #d4d4d4;">=</span><span style="color: #ce9178;">"App"</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #d4d4d4;">      </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">header</span><span style="color: #d4d4d4;"> </span><span style="color: #9cdcfe;">className</span><span style="color: #d4d4d4;">=</span><span style="color: #ce9178;">"App-header"</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #d4d4d4;">        </span><span style="color: #808080;">&lt;</span><span style="color: #4ec9b0;">Counter</span><span style="color: #d4d4d4;"> </span><span style="color: #808080;">/&gt;</span></div><div><span style="color: #d4d4d4;">      </span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">header</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #d4d4d4;">    </span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #d4d4d4;">  );</span></div><div><span style="color: #d4d4d4;">}</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #d4d4d4;"> </span><span style="color: #c586c0;">default</span><span style="color: #d4d4d4;"> </span><span style="color: #dcdcaa;">App</span><span style="color: #d4d4d4;">;</span></div><br /></div></div></div></div></foreignObject><text x="2412" y="634" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">App.js...</text></switch></g><path d="M 474 378 L 450 378 L 346 378 L 346 406.56" fill="none" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 346 407.61 L 345.3 406.21 L 346 406.56 L 346.7 406.21 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1890px; margin-left: 2060px;"><div data-drawio-colors="color: #000000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 30px;">Component imports the functions<br />from the slice<br /></font></div></div></div></foreignObject><text x="2060" y="1893" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">Component imports the functions...</text></switch></g><rect x="474" y="290" width="108" height="268" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 538px; height: 1px; padding-top: 1457px; margin-left: 2372px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><font color="#ffffff">features/counter/Counter.js<br /></font><br /><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px;"><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> <span style="color: #9cdcfe;">React</span>, { <span style="color: #9cdcfe;">useState</span> } <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'react'</span>;</div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> { <span style="color: #9cdcfe;">useSelector</span>, <span style="color: #9cdcfe;">useDispatch</span> } <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'react-redux'</span>;</div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> {</div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">decrement</span>,</div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">increment</span>,</div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">incrementByAmount</span>,</div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">incrementAsync</span>,</div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">incrementIfOdd</span>,</div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">selectCount</span>,</div><div style="color: rgb(212, 212, 212);">} <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'./counterSlice'</span>;</div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> <span style="color: #9cdcfe;">styles</span> <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'./Counter.module.css'</span>;</div><br /><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">export</span> <span style="color: #569cd6;">function</span> <span style="color: #dcdcaa;">Counter</span>() {</div><div style=""><span style="color: rgb(212, 212, 212);">  </span><span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(79, 193, 255);">count</span><span style="color: rgb(212, 212, 212);"> = </span><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>useSelector</b></font></span><span style="color: rgb(212, 212, 212);">(</span><span style="color: rgb(220, 220, 170);">selectCount</span><span style="color: rgb(212, 212, 212);">);</span></div><div style=""><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff">  const dispatch = <b>useDispatch</b>();</font></span></div><div style="color: rgb(212, 212, 212);">  <span style="color: #569cd6;">const</span> [<span style="color: #4fc1ff;">incrementAmount</span>, <span style="color: #dcdcaa;">setIncrementAmount</span>] = <span style="color: #dcdcaa;">useState</span>(<span style="color: #ce9178;">'2'</span>);</div><br /><div style="color: rgb(212, 212, 212);">  <span style="color: #569cd6;">const</span> <span style="color: #4fc1ff;">incrementValue</span> = <span style="color: #4ec9b0;">Number</span>(<span style="color: #4fc1ff;">incrementAmount</span>) || <span style="color: #b5cea8;">0</span>;</div><br /><div style="color: rgb(212, 212, 212);">  <span style="color: #c586c0;">return</span> (</div><div style="color: rgb(212, 212, 212);">    <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">      <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span> <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">row</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">button</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">button</span><span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">aria-label</span>=<span style="color: #ce9178;">"Decrement value"</span></div><div style=""><font color="#d4d4d4">          </font><span style="color: rgb(156, 220, 254);">onClick</span><span style="color: rgb(212, 212, 212);">=</span><span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(212, 212, 212);">() </span><span style="color: rgb(86, 156, 214);">=&gt;</span> <span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>dispatch</b></font></span><span style="color: rgb(212, 212, 212);">(</span><span style="color: rgb(220, 220, 170);">decrement</span><span style="color: rgb(212, 212, 212);">())</span><span style="color: rgb(86, 156, 214);">}</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">          -</div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">button</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">span</span> <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">value</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&gt;</span><span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">count</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">span</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">button</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">button</span><span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">aria-label</span>=<span style="color: #ce9178;">"Increment value"</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">onClick</span>=<span style="color: #569cd6;">{</span>() <span style="color: #569cd6;">=&gt;</span> <b style="color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);">dispatch</b>(<span style="color: #dcdcaa;">increment</span>())<span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">          +</div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">button</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">      <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">      <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span> <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">row</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">input</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">textbox</span><span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">aria-label</span>=<span style="color: #ce9178;">"Set increment amount"</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">value</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">incrementAmount</span><span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">onChange</span>=<span style="color: #569cd6;">{</span>(<span style="color: #9cdcfe;">e</span>) <span style="color: #569cd6;">=&gt;</span> <span style="color: #dcdcaa;">setIncrementAmount</span>(<span style="color: #9cdcfe;">e</span>.<span style="color: #9cdcfe;">target</span>.<span style="color: #9cdcfe;">value</span>)<span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">/&gt;</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">button</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">button</span><span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">onClick</span>=<span style="color: #569cd6;">{</span>() <span style="color: #569cd6;">=&gt;</span> <b style="color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);">dispatch</b>(<span style="color: #dcdcaa;">incrementByAmount</span>(<span style="color: #4fc1ff;">incrementValue</span>))<span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">          Add Amount</div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">button</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">button</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">asyncButton</span><span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">onClick</span>=<span style="color: #569cd6;">{</span>() <span style="color: #569cd6;">=&gt;</span> <b style="color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);">dispatch</b>(<span style="color: #dcdcaa;">incrementAsync</span>(<span style="color: #4fc1ff;">incrementValue</span>))<span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">          Add Async</div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">button</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">button</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">className</span>=<span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">styles</span>.<span style="color: #9cdcfe;">button</span><span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">          <span style="color: #9cdcfe;">onClick</span>=<span style="color: #569cd6;">{</span>() <span style="color: #569cd6;">=&gt;</span> <b style="color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);">dispatch</b>(<span style="color: #dcdcaa;">incrementIfOdd</span>(<span style="color: #4fc1ff;">incrementValue</span>))<span style="color: #569cd6;">}</span></div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">          Add If Odd</div><div style="color: rgb(212, 212, 212);">        <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">button</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">      <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">    <span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div style="color: rgb(212, 212, 212);">  );</div><div style="color: rgb(212, 212, 212);">}</div><br /></div></div></div></div></foreignObject><text x="2372" y="1469" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">features/counter/Counter.js...</text></switch></g><path d="M 214 351.5 L 214 316 L 172 316 L 172 201.07" fill="none" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 172 200.02 L 172.7 201.42 L 172 201.07 L 171.3 201.42 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1368px; margin-left: 831px;"><div data-drawio-colors="color: #000000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div style="text-align: left;"><span style="font-size: 30px;">store imports the reducer</span></div><div style="text-align: left;"><span style="font-size: 30px;"><br /></span></div><div style="text-align: left;"><span style="font-size: 30px;">REDUCER:</span></div><font style="font-size: 30px;">exports counterSlice.reducer<br /><br /></font></div></div></div></foreignObject><text x="831" y="1371" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">store imports the reducer...</text></switch></g><rect x="214" y="286" width="132" height="262" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 658px; height: 1px; padding-top: 1437px; margin-left: 1072px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><div style="line-height: 19px;"><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px;"><font style="" color="#ffffff">features/counter/CounterSlice.js </font></div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px;"><span style="color: rgb(197, 134, 192);"><br /></span></div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px;"><span style="color: rgb(197, 134, 192);">import</span><span style="color: rgb(212, 212, 212);"> { </span><span style="color: rgb(156, 220, 254);">createAsyncThunk</span><span style="color: rgb(212, 212, 212);">, </span><span style="color: rgb(156, 220, 254);">createSlice</span><span style="color: rgb(212, 212, 212);"> } </span><span style="color: rgb(197, 134, 192);">from</span><span style="color: rgb(212, 212, 212);"> </span><span style="color: rgb(206, 145, 120);">'@reduxjs/toolkit'</span><span style="color: rgb(212, 212, 212);">;</span></div><div style="line-height: 19px; font-size: 14px; font-family: Consolas, &quot;Courier New&quot;, monospace;"><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> { <span style="color: #9cdcfe;">fetchCount</span> } <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'./counterAPI'</span>;</div><div style=""><span style="color: rgb(86, 156, 214);">const</span> <span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>initialState </b></font></span><font color="#d4d4d4">= {</font></div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">value</span><span style="color: #9cdcfe;">:</span> <span style="color: #b5cea8;">0</span>,</div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">status</span><span style="color: #9cdcfe;">:</span> <span style="color: #ce9178;">'idle'</span>,</div><div style="color: rgb(212, 212, 212);">};</div><div style="color: rgb(212, 212, 212);"><span style="color: #6a9955;">// The function below is called a thunk and allows us to perform async logic. It</span></div><div style="color: rgb(212, 212, 212);"><span style="color: #6a9955;">// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This</span></div><div style="color: rgb(212, 212, 212);"><span style="color: #6a9955;">// will call the thunk with the `dispatch` function as the first argument. Async</span></div><div style="color: rgb(212, 212, 212);"><span style="color: #6a9955;">// code can then be executed and other actions can be dispatched. Thunks are</span></div><div style="color: rgb(212, 212, 212);"><span style="color: #6a9955;">// typically used to make async requests.</span></div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">export</span> <span style="color: #569cd6;">const</span> <span style="color: #4fc1ff;">incrementAsync</span> = <span style="color: #dcdcaa;">createAsyncThunk</span>(</div><div style="color: rgb(212, 212, 212);">  <span style="color: #ce9178;">'counter/fetchCount'</span>,</div><div style="color: rgb(212, 212, 212);">  <span style="color: #569cd6;">async</span> (<span style="color: #9cdcfe;">amount</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style="color: rgb(212, 212, 212);">    <span style="color: #569cd6;">const</span> <span style="color: #4fc1ff;">response</span> = <span style="color: #c586c0;">await</span> <span style="color: #dcdcaa;">fetchCount</span>(<span style="color: #9cdcfe;">amount</span>);</div><div style="color: rgb(212, 212, 212);">    <span style="color: #6a9955;">// The value we return becomes the `fulfilled` action payload</span></div><div style="color: rgb(212, 212, 212);">    <span style="color: #c586c0;">return</span> <span style="color: #4fc1ff;">response</span>.<span style="color: #9cdcfe;">data</span>;</div><div style="color: rgb(212, 212, 212);">  }</div><div style="color: rgb(212, 212, 212);">);</div><div style=""><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>export const counterSlice = createSlice({</b></font></span></div><div style=""><font color="#d4d4d4">  </font><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>name</b></font></span><span style="color: rgb(156, 220, 254);">:</span> <span style="color: rgb(206, 145, 120);">'counter'</span><font color="#d4d4d4">,</font></div><div style=""><font color="#d4d4d4">  </font><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>initialState</b></font></span><font color="#d4d4d4">,</font></div><div style="color: rgb(212, 212, 212);">  <span style="color: #6a9955;">// The `reducers` field lets us define reducers and generate associated actions</span></div><div style=""><font color="#d4d4d4">  </font><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>reducers</b></font></span><span style="color: rgb(156, 220, 254);">:</span><font color="#d4d4d4"> {</font></div><div style="color: rgb(212, 212, 212);">    <span style="color: #dcdcaa;">increment</span><span style="color: #9cdcfe;">:</span> (<span style="color: #9cdcfe;">state</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style=""><font color="#d4d4d4">     <b> </b></font><span style="background-color: rgb(185, 224, 165);"><b>// Redux Toolkit allows us to write "mutating" logic in reducers. It</b></span></div><div style=""><span style="background-color: rgb(185, 224, 165);"><b>      // doesn't actually mutate the state because it uses the Immer library,</b></span></div><div style=""><span style="background-color: rgb(185, 224, 165);"><b>      // which detects changes to a "draft state" and produces a brand new</b></span></div><div style=""><span style="background-color: rgb(185, 224, 165);"><b>      // immutable state based off those changes</b></span></div><div style="color: rgb(212, 212, 212);">      <span style="color: #9cdcfe;">state</span>.<span style="color: #9cdcfe;">value</span> += <span style="color: #b5cea8;">1</span>;</div><div style="color: rgb(212, 212, 212);">    },</div><div style="color: rgb(212, 212, 212);">    <span style="color: #dcdcaa;">decrement</span><span style="color: #9cdcfe;">:</span> (<span style="color: #9cdcfe;">state</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style="color: rgb(212, 212, 212);">      <span style="color: #9cdcfe;">state</span>.<span style="color: #9cdcfe;">value</span> -= <span style="color: #b5cea8;">1</span>;</div><div style="color: rgb(212, 212, 212);">    },</div><div style="color: rgb(212, 212, 212);">    <span style="color: #6a9955;">// Use the PayloadAction type to declare the contents of `action.payload`</span></div><div style="color: rgb(212, 212, 212);">    <span style="color: #dcdcaa;">incrementByAmount</span><span style="color: #9cdcfe;">:</span> (<span style="color: #9cdcfe;">state</span>, <span style="color: #9cdcfe;">action</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style="color: rgb(212, 212, 212);">      <span style="color: #9cdcfe;">state</span>.<span style="color: #9cdcfe;">value</span> += <span style="color: #9cdcfe;">action</span>.<span style="color: #9cdcfe;">payload</span>;</div><div style="color: rgb(212, 212, 212);">    },</div><div style="color: rgb(212, 212, 212);">  },</div><div style="color: rgb(212, 212, 212);">  <span style="color: #6a9955;">// The `extraReducers` field lets the slice handle actions defined elsewhere,</span></div><div style="color: rgb(212, 212, 212);">  <span style="color: #6a9955;">// including actions generated by createAsyncThunk or in other slices.</span></div><div style="color: rgb(212, 212, 212);">  <span style="color: #dcdcaa;">extraReducers</span><span style="color: #9cdcfe;">:</span> (<span style="color: #9cdcfe;">builder</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style="color: rgb(212, 212, 212);">    <span style="color: #9cdcfe;">builder</span></div><div style="color: rgb(212, 212, 212);">      .<span style="color: #dcdcaa;">addCase</span>(<span style="color: #4fc1ff;">incrementAsync</span>.<span style="color: #9cdcfe;">pending</span>, (<span style="color: #9cdcfe;">state</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style="color: rgb(212, 212, 212);">        <span style="color: #9cdcfe;">state</span>.<span style="color: #9cdcfe;">status</span> = <span style="color: #ce9178;">'loading'</span>;</div><div style="color: rgb(212, 212, 212);">      })</div><div style="color: rgb(212, 212, 212);">      .<span style="color: #dcdcaa;">addCase</span>(<span style="color: #4fc1ff;">incrementAsync</span>.<span style="color: #9cdcfe;">fulfilled</span>, (<span style="color: #9cdcfe;">state</span>, <span style="color: #9cdcfe;">action</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style="color: rgb(212, 212, 212);">        <span style="color: #9cdcfe;">state</span>.<span style="color: #9cdcfe;">status</span> = <span style="color: #ce9178;">'idle'</span>;</div><div style="color: rgb(212, 212, 212);">        <span style="color: #9cdcfe;">state</span>.<span style="color: #9cdcfe;">value</span> += <span style="color: #9cdcfe;">action</span>.<span style="color: #9cdcfe;">payload</span>;</div><div style="color: rgb(212, 212, 212);">      });</div><div style="color: rgb(212, 212, 212);">  },</div><div style="color: rgb(212, 212, 212);">});</div><div style=""><font color="#ffffff" style="background-color: rgb(255, 0, 0);">export const { increment, decrement, incrementByAmount } = counterSlice.actions;</font></div><div style=""><b style="background-color: rgb(185, 224, 165);">// The function below is called a selector and allows us to select a value from</b></div><div style=""><b style="background-color: rgb(185, 224, 165);">// the state. Selectors can also be defined inline where they're used instead of</b></div><div style=""><b style="background-color: rgb(185, 224, 165);">// in the slice file. For example: `useSelector((state: RootState) =&gt; state.counter.value)`</b></div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">export</span> <span style="color: #569cd6;">const</span> <span style="color: #dcdcaa;">selectCount</span> = (<span style="color: #9cdcfe;">state</span>) <span style="color: #569cd6;">=&gt;</span> <span style="color: #9cdcfe;">state</span>.<span style="color: #9cdcfe;">counter</span>.<span style="color: #9cdcfe;">value</span>;</div><div style="color: rgb(212, 212, 212);"><span style="color: #6a9955;">// We can also write thunks by hand, which may contain both sync and async logic.</span></div><div style="color: rgb(212, 212, 212);"><span style="color: #6a9955;">// Here's an example of conditionally dispatching actions based on current state.</span></div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">export</span> <span style="color: #569cd6;">const</span> <span style="color: #dcdcaa;">incrementIfOdd</span> = (<span style="color: #9cdcfe;">amount</span>) <span style="color: #569cd6;">=&gt;</span> (<span style="color: #9cdcfe;">dispatch</span>, <span style="color: #9cdcfe;">getState</span>) <span style="color: #569cd6;">=&gt;</span> {</div><div style="color: rgb(212, 212, 212);">  <span style="color: #569cd6;">const</span> <span style="color: #4fc1ff;">currentValue</span> = <span style="color: #dcdcaa;">selectCount</span>(<span style="color: #dcdcaa;">getState</span>());</div><div style="color: rgb(212, 212, 212);">  <span style="color: #c586c0;">if</span> (<span style="color: #4fc1ff;">currentValue</span> % <span style="color: #b5cea8;">2</span> === <span style="color: #b5cea8;">1</span>) {</div><div style="color: rgb(212, 212, 212);">    <span style="color: #dcdcaa;">dispatch</span>(<span style="color: #dcdcaa;">incrementByAmount</span>(<span style="color: #9cdcfe;">amount</span>));</div><div style="color: rgb(212, 212, 212);">  }</div><div style="color: rgb(212, 212, 212);">};</div><div style=""><span style="background-color: rgb(255, 0, 0);"><b style=""><font color="#ffffff">export default counterSlice.reducer;</font></b></span></div><br /></div></div></div></div></div></foreignObject><text x="1072" y="1449" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">features/counter/CounterSlice.js...</text></switch></g><rect x="216" y="228" width="88" height="8" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1160px; margin-left: 1082px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;">features/counter/CounterSlice.js<br />-<span style="text-align: center;">Reducer </span>functions + actions</div></div></div></foreignObject><text x="1082" y="1167" fill="#000000" font-family="Helvetica" font-size="24px" font-weight="bold">features/counter/CounterSlice.js...</text></switch></g><rect x="328" y="92" width="140" height="22" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 1642px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;"><div style="">index.js</div><div style="">Provide the redux store to react.</div><div style="">Provider provides access of store to its children/decendants</div></div></div></div></foreignObject><text x="1642" y="522" fill="#000000" font-family="Helvetica" font-size="24px" font-weight="bold">index.js...</text></switch></g><rect x="482" y="113" width="20" height="8" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 585px; margin-left: 2460px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;">App.js</div></div></div></foreignObject><text x="2460" y="592" fill="#000000" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">App.js</text></switch></g><rect x="464" y="242" width="102" height="8" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1230px; margin-left: 2322px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;">features/counter/Counter.js</div></div></div></foreignObject><text x="2322" y="1237" fill="#000000" font-family="Helvetica" font-size="24px" font-weight="bold">features/counter/Counter.js</text></switch></g><path d="M 253.8 180 L 326 180 L 326.04 180.02" fill="none" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 327 180.46 L 325.43 180.51 L 326.04 180.02 L 326.02 179.24 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-width="0.2" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 850px; margin-left: 1440px;"><div data-drawio-colors="color: #000000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 30px;">index imports store</font></div></div></div></foreignObject><text x="1440" y="853" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">index imports store</text></switch></g><rect x="164" y="156" width="89.8" height="42.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 447px; height: 1px; padding-top: 787px; margin-left: 822px;"><div data-drawio-colors="color: #000000; background-color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(0, 0, 0); white-space: normal; overflow-wrap: normal;"><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px;"><div style=""><font color="#ffffff">app/store.js</font></div><div style=""><font><div style="line-height: 19px;"><div style=""><div style="line-height: 19px;"><div style=""><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>import { configureStore } from '@reduxjs/toolkit';</b></font></span></div><div style="color: rgb(212, 212, 212);"><span style="color: #c586c0;">import</span> <span style="color: #9cdcfe;">counterReducer</span> <span style="color: #c586c0;">from</span> <span style="color: #ce9178;">'../features/counter/counterSlice'</span>;</div><br /><div style=""><span style="color: rgb(197, 134, 192);">export</span> <span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(79, 193, 255);">store</span><span style="color: rgb(212, 212, 212);"> = </span><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>configureStore</b></font></span><span style="color: rgb(212, 212, 212);">({</span></div><div style="color: rgb(212, 212, 212);">  <span style="color: #9cdcfe;">reducer</span><span style="color: #9cdcfe;">:</span> {</div><div style="color: rgb(212, 212, 212);">    <span style="color: #dcdcaa;">counter</span><span style="color: #9cdcfe;">:</span> <span style="color: #dcdcaa;">counterReducer</span>,</div><div style="color: rgb(212, 212, 212);">  },</div><div style="color: rgb(212, 212, 212);">});</div><br /></div></div></div></font></div></div></div></div></div></foreignObject><text x="822" y="799" fill="#000000" font-family="Helvetica" font-size="12px">app/store.js...</text></switch></g><rect x="164" y="146" width="32" height="8" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 750px; margin-left: 822px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;">app/store.js</div></div></div></foreignObject><text x="822" y="757" fill="#000000" font-family="Helvetica" font-size="24px" font-weight="bold">app/store.js</text></switch></g><rect x="170" y="123" width="20" height="8" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 635px; margin-left: 900px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 50px;">1 Store</font></div></div></div></foreignObject><text x="900" y="642" fill="#000000" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">1 Store</text></switch></g><rect x="336" y="80" width="20" height="8" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 420px; margin-left: 1730px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 50px;">2 index</font></div></div></div></foreignObject><text x="1730" y="427" fill="#000000" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">2 index</text></switch></g><rect x="487" y="102" width="20" height="8" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 530px; margin-left: 2485px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;"><span style="font-size: 50px;">3 App</span></div></div></div></foreignObject><text x="2485" y="537" fill="#000000" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">3 App</text></switch></g><rect x="464" y="229" width="66" height="14" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1180px; margin-left: 2485px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 50px;">4 Component</font></div></div></div></foreignObject><text x="2485" y="1187" fill="#000000" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">4 Component</text></switch></g><rect x="214" y="216" width="54" height="10" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1105px; margin-left: 1205px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;"><font style="font-size: 50px;">5 Reducer</font></div></div></div></foreignObject><text x="1205" y="1112" fill="#000000" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">5 Reducer</text></switch></g><rect x="10" y="10" width="470" height="50" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 175px; margin-left: 1225px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 80px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; background-color: rgb(255, 255, 255); white-space: nowrap;">React+ReduxToolkit</div></div></div></foreignObject><text x="1225" y="199" fill="#000000" font-family="Helvetica" font-size="80px" text-anchor="middle" font-weight="bold">React+ReduxToolkit</text></switch></g><rect x="170" y="66" width="36" height="22" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="none"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 178px; height: 1px; padding-top: 337px; margin-left: 851px;"><div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: normal; overflow-wrap: normal;"><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px;"><span style="">@reduxjs/toolkit</span></div></div></div></div></foreignObject><text x="940" y="349" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">@reduxjs/toolkit</text></switch></g><rect x="178" y="74" width="24" height="12" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-width="0.2" pointer-events="none"/><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 400px; margin-left: 891px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="background-color: rgb(255, 255, 255);">Redux <span style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px;">^8.0.2</span></span></div></div></div></foreignObject><text x="950" y="404" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Redux ^8.0.2</text></switch></g><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 290px; margin-left: 930px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: nowrap;">React CRA</div></div></div></foreignObject><text x="930" y="297" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">React CRA</text></switch></g><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 428px; height: 1px; padding-top: 695px; margin-left: 801px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 40px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">create the redux store</div></div></div></foreignObject><text x="1015" y="707" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="40px" text-anchor="middle">create the redux store</text></switch></g><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 478px; height: 1px; padding-top: 1105px; margin-left: 1341px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 40px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">create a redux state slice</div></div></div></foreignObject><text x="1580" y="1117" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="40px" text-anchor="middle">create a redux state sli...</text></switch></g><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 808px; height: 1px; padding-top: 1253px; margin-left: 1082px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 191px; overflow: hidden;"><div style="display: inline-block; font-size: 40px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><ol><li><span style="background-color: initial;">slice name</span></li><li><span style="background-color: initial;">initial state<br /></span></li><li><span style="background-color: initial;">reducer functions to update state</span></li></ol></div></div></div></foreignObject><text x="1082" y="1265" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="40px">slice nameinitial state...</text></switch></g><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 688px; height: 1px; padding-top: 1375px; margin-left: 1081px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 40px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">Exports: the<span style="background-color: rgb(255, 0, 0);"> <font color="#ffffff">generated action creators</font></span></div></div></div></foreignObject><text x="1425" y="1387" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="40px" text-anchor="middle">Exports: the generated action creat...</text></switch></g><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 828px; height: 1px; padding-top: 1320px; margin-left: 2332px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 176px; overflow: hidden;"><div style="display: inline-block; font-size: 40px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><ol><li>read data from the store with <b style="background-color: rgb(255, 0, 0);"><font color="#ffffff">useSelector </font></b></li><li><span style="background-color: initial;">dispatch actions using </span><span style="background-color: rgb(255, 0, 0);"><font color="#ffffff"><b>useDispatch</b></font></span></li></ol></div></div></div></foreignObject><text x="2332" y="1332" fill="#000000" font-family="Helvetica" font-size="40px">read data from the store with useSelector...</text></switch></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="4.800000000000001px"><text x="141.3" y="352.9">Internally, it uses createAction() and createReducer()</text></g><g transform="translate(-0.5 -0.5)scale(0.2)"><switch><foreignObject pointer-events="none" width="500%" height="500%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1715px; margin-left: 535px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: nowrap;">CreateSlice()</div></div></div></foreignObject><text x="535" y="1722" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">CreateSlice()</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>